#
# This YAML defines a structured, step-by-step guide to migrate classes and code from JDO-specific annotations
# to their JPA equivalents.
#
# This is the main recipe to execute all recipes nessecary to migrate from JDO to JPA.
#
# author patrick.deenen@opencirclesolutions.nl
#

---
type: specs.openrewrite.org/v1beta/recipe
name: com.ecpnv.openrewrite.jdo2jpa.v2x
displayName: Migrate from JDO to JPA v2.x
description: These recipes help migrate JDO applications using Datanucleus JDO to Java Persistence using JPA version v2.x (pre Jakarta persistence).
tags:
  - jdo
  - jpa
  - migrate
  - modernize
  - java
  - javax
  - persistence
recipeList:
  - com.ecpnv.openrewrite.jdo2jpa.v2x.PersistenceCapable
  - com.ecpnv.openrewrite.jdo2jpa.v2x.Persistent
  - org.openrewrite.java.ReplaceAnnotation:
      annotationPatternToReplace: '@javax.jdo.annotations.NotPersistent'
      annotationTemplateToInsert: '@javax.persistence.Transient'
  - org.openrewrite.java.ShortenFullyQualifiedTypeReferences
  - org.openrewrite.java.RemoveUnusedImports
---
type: specs.openrewrite.org/v1beta/recipe
name: com.ecpnv.openrewrite.jdo2jpa.v2x.PersistenceCapable
displayName: Migrate from JDO to JPA v2.x for @PersistenceCapable
description: Migrate @Persistence to @Entity and @Table.
tags:
  - jdo
  - jpa
  - migrate
  - modernize
  - java
  - javax
  - persistence
recipeList:
  - com.ecpnv.openrewrite.jdo2jpa.AddEntityAnnotation
  - com.ecpnv.openrewrite.jdo2jpa.ReplacePersistenceCapableWithTableAnnotation
  - org.openrewrite.java.RemoveAnnotation:
      annotationPattern: '@javax.jdo.annotations.PersistenceCapable'
---
type: specs.openrewrite.org/v1beta/recipe
name: com.ecpnv.openrewrite.jdo2jpa.v2x.Persistent
displayName: Migrate from JDO to JPA v2.x for @Persistent
description: Migrate @Persistent to @OneToMany and @Column.
tags:
  - jdo
  - jpa
  - migrate
  - modernize
  - java
  - javax
  - persistence
recipeList:
  - com.ecpnv.openrewrite.jdo2jpa.ReplacePersistentWithOneToManyAnnotation
  # TODO this argument should be recognized, but it is not...
  #      defaultCascade: 'CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REFRESH, CascadeType.DETACH'
  - org.openrewrite.java.RemoveAnnotation:
      annotationPattern: '@javax.jdo.annotations.Persistent'
